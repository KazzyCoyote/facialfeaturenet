name: "CaffeNet"
layer {
    name: "data"
    type: "Data"
    top: "data"
    top: "label"
    include {
        phase: TRAIN
    }
    transform_param {
        mirror: false
        #crop_size: 224
        mean_value: 100
        mean_value: 100
        mean_value: 100
        #scale: -1
    }
    data_param {
    source: "/facialfeaturenet/lmdb_imageset"
    batch_size: 20
    backend: LMDB
    }
}

layer {
  name : "conv1"
  type : "Convolution"
  bottom : "data"
  top : "conv1"
  convolution_param {
    num_output : 12
    kernel_size : 11
    stride : 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult : 10
    decay_mult : 0
  }
  param {
    lr_mult : 20
    decay_mult : 0
  }
}
layer {
  name : "relu1"
  type : "ReLU"
  bottom : "conv1"
  top : "conv1"
}
layer {
  name : "pool1"
  type : "Pooling"
  bottom : "conv1"
  top : "pool1"
  pooling_param {
    pool : MAX
    kernel_size : 3
    stride : 2
  }
}
layer {
  name : "norm1"
  type : "LRN"
  bottom : "pool1"
  top : "norm1"
  lrn_param {
    local_size : 7
    alpha : 0.0001
    beta : 0.75
    k: 1
  }
}
layer {
  name : "conv2"
  type : "Convolution"
  bottom : "norm1"
  top : "conv2"
  convolution_param {
    num_output : 32
    pad : 2
    kernel_size : 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult : 10
    decay_mult : 0
  }
  param {
    lr_mult : 20
    decay_mult : 0
  }
}
layer {
  name : "relu2"
  type : "ReLU"
  bottom : "conv2"
  top : "conv2"
}
layer {
  name : "pool2"
  type : "Pooling"
  bottom : "conv2"
  top : "pool2"
  pooling_param {
    pool : MAX
    kernel_size : 3
    stride : 2
  }
}
layer {
  name : "norm2"
  type : "LRN"
  bottom : "pool2"
  top : "norm2"
  lrn_param {
    local_size : 7
    alpha : 0.0001
    beta : 0.75
    k: 1
  }
}
layer {
  name : "conv3"
  type : "Convolution"
  bottom : "norm2"
  top : "conv3"
  convolution_param {
    num_output : 48
    pad : 1
    kernel_size : 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  param {
    lr_mult : 10
    decay_mult : 0
  }
  param {
    lr_mult : 20
    decay_mult : 0
  }
}
layer {
  name : "relu3"
  type : "ReLU"
  bottom : "conv3"
  top : "conv3"
}
layer {
  name : "pool5"
  type : "Pooling"
  bottom : "conv3"
  top : "pool5"
  pooling_param {
    pool : MAX
    kernel_size : 3
    stride : 2
  }
}
layer {
  name : "dconv"
  type : "Deconvolution"
  bottom : "pool5"
  top : "dconv"
  convolution_param {
    num_output : 12
    kernel_size :11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult : 1
    decay_mult : 0
  }
  param {
    lr_mult : 2
    decay_mult : 0
  }
}
layer {
  name : "relu4"
  type : "ReLU"
  bottom : "dconv"
  top : "dconv"
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dconv"
  top: "fc6"
  param {
    lr_mult : 10
    decay_mult: 0
  }
  param {
    lr_mult : 20
    decay_mult : 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc6"
  bottom: "label"
  top: "loss"
}
